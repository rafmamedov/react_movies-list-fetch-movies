{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","concat","then","res","json","catch","Response","Error","FindMovie","addMovie","_useState","useState","_useState2","_slicedToArray","setQuery","_useState3","_useState4","setMovie","_useState5","_useState6","hasError","setHasError","_useState7","_useState8","isMovieFetching","setIsMovieFetching","submitButtonText","getMovieFromResponse","response","Poster","imdbID","selectedMovie","Title","Plot","getMovieByName","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","foundMovie","wrap","_context","prev","next","preventDefault","sent","error","stop","_x","apply","arguments","_Fragment","htmlFor","type","id","placeholder","value","onChange","target","classNames","onClick","disabled","App","setMovies","some","addedMovie","updatedMovies","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e24e182b.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=1cf917ca';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [hasError, setHasError] = useState(false);\n  const [isMovieFetching, setIsMovieFetching] = useState(false);\n  const submitButtonText = movie ? 'Search Again' : 'Find a movie';\n\n  const getMovieFromResponse = (response: MovieData | ResponseError) => {\n    if ('Error' in response) {\n      setHasError(true);\n\n      return null;\n    }\n\n    const imgUrl = response.Poster === 'N/A'\n      ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n      : response.Poster;\n    const imdbUrl = `https://www.imdb.com/title/${response.imdbID}`;\n\n    const selectedMovie: Movie = {\n      title: response.Title,\n      description: response.Plot,\n      imgUrl,\n      imdbUrl,\n      imdbId: response.imdbID,\n    };\n\n    setHasError(false);\n\n    return selectedMovie;\n  };\n\n  const getMovieByName = async (event: { preventDefault: () => void; }) => {\n    event.preventDefault();\n    setIsMovieFetching(true);\n\n    const response = await getMovie(query);\n\n    try {\n      const foundMovie = getMovieFromResponse(response);\n\n      setMovie(foundMovie);\n    } catch (error) {\n      getMovieFromResponse(response);\n    } finally {\n      setIsMovieFetching(false);\n    }\n  };\n\n  const handleAddMovie = (searchMovie: Movie) => {\n    addMovie(searchMovie);\n    setMovie(null);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n                setHasError(false);\n              }}\n            />\n          </div>\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': isMovieFetching,\n              })}\n              onClick={getMovieByName}\n              disabled={!query}\n            >\n              {submitButtonText}\n            </button>\n          </div>\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => handleAddMovie(movie)}\n              >\n                Add to the list\n              </button>\n            </div>\n          ) }\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    const hasMovie = movies\n      .some(addedMovie => addedMovie.imdbId === movie.imdbId);\n\n    if (hasMovie) {\n      return;\n    }\n\n    const updatedMovies = [...movies, movie];\n\n    setMovies(updatedMovies);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}